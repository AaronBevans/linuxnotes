*Many combinations: These are just a few*
ls - list out items
ls -a -  list out all items in a directory.
ls -l - list out a long list of info on a directory
ls -s - list the size of a directory or file.
ls -t - list the date and time a directory or file was last modified.
ls -lt - lists out the details of when a file or directory was last modified, newest first.
ls -lrs - lists out info on a dir/file in reverse.
ls -Sl - list out the size of a dir/file info.
ls -lst - lists out the size and time a dir/file was modified.

/bin/ls === ls

env = environment variables

PATH = searches/lists directories for commands we have typed in.

echo = types out text we type in.

echo $PATH = all environment variables need a $ before being listed.

whoami = lists out username

echo $LOGNAME = lists out username

su username = logs user into another username

exit = exit

sudo - = logs in as root

sudo su = logs in as root

reboot = reebots a system

init6 = reboots a system (legacy)

init0 = halts or shutsdown a system when root.

halt = halts a system as root

shutdown -h = shuts downs system

shutdown -H = halts a system 

shutdown -r = restarts a system

shutdown -P = powers down a system

top = shows top running programs on a system

h = gives options


uname = displays system info

uname -a = displays all system info

uname -s = kernel name

uname -r = kernel releave info

uname -v = system version info

uname -m = system machine info

uname -o = operating system name

uname -p = machine processor info

cd = change directory

cd ~ = return home

pwd = prints current work directory

.bash_history = holds record of commands

echo $HISTFILSIZE = shows the bash history file capacity.

echo $HISTCONTROL = sets advanced instructions for bash to follow when running commands.

history = numbered list of previously used commands.
using a !<number from list> runs that specific command

*Shell config files*

tab = autocompletes a command

log in shell = prompted to log in.

.bash_logout = runs when a user logs out.


non-log in = identifies real text

/ect/profile = set up default user environment variables and run scripts for user logins.

/etc/profile -> /bash_profile = sets up envi variables ->

 /.bashrc = sets user defined command aliases and functions. ->

 /ect/bashrc = system wide function  commands and aliases.


*shell variables*

Shell variables = container for values.


system changes values of variables based on what we have done.


creating variables: VARIABLE_NAME='variable value'
to access variable: echo $VARIABLE_NAME

to access careted variables in another terminal: export VARIABLE_NAME,
echo $VARIABLE_NAME

to append to an existing variable. VARIABLE_NAME=$VARIABLE_NAME:/new_data


*globbing*

helps up guess name of file or directory with use iof specific wildcard symbols

ls *.file = lists out all of the files with the same file extension. ls *.py

also listsout all files thet begins with specific spelling.

? = lists out files with a certain amount of characters. ls ????.txt

ls test?.file =  lists out any file with a number in the title.

[AaBbCc]* = lists out files with upper or lower case letters. ls [Aa]*.py

[]letters[0-9] = lists out files containing upper/lower case & contains numbers in title.


*quotting in the bash shell*

" " = substitutes the echo command for the variale value e.g. echo "This is the $LOGNAME" 
will print out the $LOGNAME variable value = user.

" " = will also ignore spaces in a file/directory name.

' ' = will print out the literal syntax of a string.

\ = will ignore spaces in a file/directory name

\ = will also ignore $ from iterpreting variables.

ls \ = will allows command switches to run on multiple lines in the bash shell.


*Formatting commands*
$ = regular user

# = root user

Commands; what you want to do, Swicth/Options/Flags; how to execute, Argument; what to execute command on.


*Locate, Find, Whereis*

find - searches for files in a directory hierarchy

locate - locates files by name.

whereis - locate the binary, source, and manual file pages for a command. 



*Using command line to get help*

man - short for manual


man <command/argument> - lists out definitions of the command and a list of switches.


man # <command/argument> - lists out the section page of command along with information.


whatis - lists out summaries in man pages based on what we provide and which page applies to the summary.

man -f = ''

apropos = searches all man pages for key board

man -k = ''

/(at bottom of man page) = allows us to search for keywords within the current man page.


*Info Pages*

info - read documentation in Info format.

additional info - /usr/doc/packagename,
/usr/share/doc/packages/packagename,
/usr/share/doc/packages/packagename.


